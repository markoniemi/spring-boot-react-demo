// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UserRow component should not create error with empty user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserRow
    deleteUser={null}
    history={null}
    location={null}
    match={
      Object {
        "isExact": false,
        "params": null,
        "path": null,
        "url": null,
      }
    }
    user={
      User {
        "email": undefined,
        "id": undefined,
        "password": undefined,
        "username": undefined,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td
          id="username"
        >
          <ForwardRef
            to="/users/undefined"
          />
        </td>,
        <td
          id="email"
        />,
        <td>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="small"
            bsStyle="default"
            disabled={false}
            id="edit"
            onClick={[Function]}
          >
            <Glyphicon
              bsClass="glyphicon"
              glyph="glyphicon glyphicon-edit"
            />
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="small"
            bsStyle="default"
            disabled={false}
            id="delete"
            onClick={[Function]}
          >
            <Glyphicon
              bsClass="glyphicon"
              glyph="glyphicon glyphicon-remove"
            />
          </Button>
        </td>,
      ],
      "id": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ForwardRef
            to="/users/undefined"
          />,
          "id": "username",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": undefined,
            "to": "/users/undefined",
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "NavLink",
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          },
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": undefined,
          "id": "email",
        },
        "ref": null,
        "rendered": null,
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="edit"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-edit"
              />
            </Button>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="delete"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-remove"
              />
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "small",
              "bsStyle": "default",
              "children": <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-edit"
              />,
              "disabled": false,
              "id": "edit",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "glyphicon",
                "glyph": "glyphicon glyphicon-edit",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "small",
              "bsStyle": "default",
              "children": <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-remove"
              />,
              "disabled": false,
              "id": "delete",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "glyphicon",
                "glyph": "glyphicon glyphicon-remove",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td
            id="username"
          >
            <ForwardRef
              to="/users/undefined"
            />
          </td>,
          <td
            id="email"
          />,
          <td>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="edit"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-edit"
              />
            </Button>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="delete"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-remove"
              />
            </Button>
          </td>,
        ],
        "id": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ForwardRef
              to="/users/undefined"
            />,
            "id": "username",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": undefined,
              "to": "/users/undefined",
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "NavLink",
              "propTypes": Object {
                "activeClassName": [Function],
                "activeStyle": [Function],
                "aria-current": [Function],
                "className": [Function],
                "exact": [Function],
                "innerRef": [Function],
                "isActive": [Function],
                "location": [Function],
                "onClick": [Function],
                "replace": [Function],
                "strict": [Function],
                "style": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            },
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "id": "email",
          },
          "ref": null,
          "rendered": null,
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="small"
                bsStyle="default"
                disabled={false}
                id="edit"
                onClick={[Function]}
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-edit"
                />
              </Button>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="small"
                bsStyle="default"
                disabled={false}
                id="delete"
                onClick={[Function]}
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-remove"
                />
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "small",
                "bsStyle": "default",
                "children": <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-edit"
                />,
                "disabled": false,
                "id": "edit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "glyphicon",
                  "glyph": "glyphicon glyphicon-edit",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "small",
                "bsStyle": "default",
                "children": <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-remove"
                />,
                "disabled": false,
                "id": "delete",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "glyphicon",
                  "glyph": "glyphicon glyphicon-remove",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`UserRow component should render a user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserRow
    deleteUser={null}
    history={null}
    location={null}
    match={
      Object {
        "isExact": false,
        "params": null,
        "path": null,
        "url": null,
      }
    }
    user={
      Object {
        "email": "email1",
        "id": 1,
        "password": "password1",
        "username": "user1",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": "1",
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td
          id="username"
        >
          <ForwardRef
            to="/users/1"
          >
            user1
          </ForwardRef>
        </td>,
        <td
          id="email"
        >
          email1
        </td>,
        <td>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="small"
            bsStyle="default"
            disabled={false}
            id="edit"
            onClick={[Function]}
          >
            <Glyphicon
              bsClass="glyphicon"
              glyph="glyphicon glyphicon-edit"
            />
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="small"
            bsStyle="default"
            disabled={false}
            id="delete"
            onClick={[Function]}
          >
            <Glyphicon
              bsClass="glyphicon"
              glyph="glyphicon glyphicon-remove"
            />
          </Button>
        </td>,
      ],
      "id": "user1",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ForwardRef
            to="/users/1"
          >
            user1
          </ForwardRef>,
          "id": "username",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "user1",
            "to": "/users/1",
          },
          "ref": null,
          "rendered": "user1",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "displayName": "NavLink",
            "propTypes": Object {
              "activeClassName": [Function],
              "activeStyle": [Function],
              "aria-current": [Function],
              "className": [Function],
              "exact": [Function],
              "innerRef": [Function],
              "isActive": [Function],
              "location": [Function],
              "onClick": [Function],
              "replace": [Function],
              "strict": [Function],
              "style": [Function],
              "target": [Function],
              "to": [Function],
            },
            "render": [Function],
          },
        },
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "email1",
          "id": "email",
        },
        "ref": null,
        "rendered": "email1",
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="edit"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-edit"
              />
            </Button>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="delete"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-remove"
              />
            </Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "small",
              "bsStyle": "default",
              "children": <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-edit"
              />,
              "disabled": false,
              "id": "edit",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "glyphicon",
                "glyph": "glyphicon glyphicon-edit",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "small",
              "bsStyle": "default",
              "children": <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-remove"
              />,
              "disabled": false,
              "id": "delete",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "glyphicon",
                "glyph": "glyphicon glyphicon-remove",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": "1",
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td
            id="username"
          >
            <ForwardRef
              to="/users/1"
            >
              user1
            </ForwardRef>
          </td>,
          <td
            id="email"
          >
            email1
          </td>,
          <td>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="edit"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-edit"
              />
            </Button>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="default"
              disabled={false}
              id="delete"
              onClick={[Function]}
            >
              <Glyphicon
                bsClass="glyphicon"
                glyph="glyphicon glyphicon-remove"
              />
            </Button>
          </td>,
        ],
        "id": "user1",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ForwardRef
              to="/users/1"
            >
              user1
            </ForwardRef>,
            "id": "username",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "user1",
              "to": "/users/1",
            },
            "ref": null,
            "rendered": "user1",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "displayName": "NavLink",
              "propTypes": Object {
                "activeClassName": [Function],
                "activeStyle": [Function],
                "aria-current": [Function],
                "className": [Function],
                "exact": [Function],
                "innerRef": [Function],
                "isActive": [Function],
                "location": [Function],
                "onClick": [Function],
                "replace": [Function],
                "strict": [Function],
                "style": [Function],
                "target": [Function],
                "to": [Function],
              },
              "render": [Function],
            },
          },
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "email1",
            "id": "email",
          },
          "ref": null,
          "rendered": "email1",
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="small"
                bsStyle="default"
                disabled={false}
                id="edit"
                onClick={[Function]}
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-edit"
                />
              </Button>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="small"
                bsStyle="default"
                disabled={false}
                id="delete"
                onClick={[Function]}
              >
                <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-remove"
                />
              </Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "small",
                "bsStyle": "default",
                "children": <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-edit"
                />,
                "disabled": false,
                "id": "edit",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "glyphicon",
                  "glyph": "glyphicon glyphicon-edit",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "small",
                "bsStyle": "default",
                "children": <Glyphicon
                  bsClass="glyphicon"
                  glyph="glyphicon glyphicon-remove"
                />,
                "disabled": false,
                "id": "delete",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "glyphicon",
                  "glyph": "glyphicon glyphicon-remove",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
