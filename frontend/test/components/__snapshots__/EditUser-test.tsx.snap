// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditUser component should not create error with empty user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <withRouter(EditUser) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "Consumer": [Circular],
      "Provider": Object {
        "$$typeof": Symbol(react.provider),
        "_context": [Circular],
      },
      "_calculateChangedBits": null,
      "_changedBits": 0,
      "_currentRenderer": null,
      "_currentValue": undefined,
      "_defaultValue": undefined,
      "displayName": "Router",
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_changedBits": 0,
        "_currentRenderer": null,
        "_currentValue": undefined,
        "_defaultValue": undefined,
        "displayName": "Router",
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`EditUser component should render a user 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditUser
    history={null}
    location={null}
    match={
      Object {
        "isExact": false,
        "params": Object {
          "id": "1",
        },
        "path": null,
        "url": null,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <PanelHeading
          bsClass="panel"
          componentClass="div"
        >
          <FormattedMessage
            id="user"
            values={Object {}}
          />
        </PanelHeading>,
        <PanelBody
          bsClass="panel"
          collapsible={false}
        >
          <Messages />
          <Form
            bsClass="form"
            componentClass="form"
            horizontal={true}
            inline={false}
          >
            <FormGroup
              bsClass="form-group"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={1}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  <FormattedMessage
                    id="id"
                    values={Object {}}
                  />
                  :
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
              >
                <FormControl
                  autoFocus={true}
                  bsClass="form-control"
                  bsSize="small"
                  componentClass="input"
                  disabled={true}
                  type="text"
                  value=""
                />
              </Col>
            </FormGroup>
            <FormGroup
              bsClass="form-group"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={1}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  <FormattedMessage
                    id="username"
                    values={Object {}}
                  />
                  :
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
              >
                <FormControl
                  autoFocus={true}
                  bsClass="form-control"
                  bsSize="small"
                  componentClass="input"
                  id="username"
                  name="username"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </Col>
            </FormGroup>
            <FormGroup
              bsClass="form-group"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={1}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  <FormattedMessage
                    id="email"
                    values={Object {}}
                  />
                  :
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
              >
                <FormControl
                  bsClass="form-control"
                  bsSize="small"
                  componentClass="input"
                  id="email"
                  name="email"
                  onChange={[Function]}
                  onKeyPress={[Function]}
                  type="text"
                  value=""
                />
              </Col>
            </FormGroup>
            <FormGroup
              bsClass="form-group"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={1}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  <FormattedMessage
                    id="password"
                    values={Object {}}
                  />
                  :
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                sm={4}
              >
                <FormControl
                  bsClass="form-control"
                  bsSize="small"
                  componentClass="input"
                  id="password"
                  name="password"
                  onChange={[Function]}
                  onKeyPress={[Function]}
                  type="password"
                  value=""
                />
              </Col>
            </FormGroup>
            <FormGroup
              bsClass="form-group"
            >
              <Col
                bsClass="col"
                componentClass="div"
                sm={5}
              >
                <Button
                  active={false}
                  block={false}
                  bsClass="btn"
                  bsSize="small"
                  bsStyle="default"
                  className="pull-right"
                  disabled={false}
                  id="saveUser"
                  onClick={[Function]}
                >
                  <Glyphicon
                    bsClass="glyphicon"
                    glyph="glyphicon glyphicon-ok"
                  />
                </Button>
              </Col>
            </FormGroup>
          </Form>
        </PanelBody>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "panel",
          "children": <FormattedMessage
            id="user"
            values={Object {}}
          />,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "user",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "panel",
          "children": Array [
            <Messages />,
            <Form
              bsClass="form"
              componentClass="form"
              horizontal={true}
              inline={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="id"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    autoFocus={true}
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    disabled={true}
                    type="text"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="username"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    autoFocus={true}
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    id="username"
                    name="username"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="email"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    id="email"
                    name="email"
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="password"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    id="password"
                    name="password"
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    type="password"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={5}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    className="pull-right"
                    disabled={false}
                    id="saveUser"
                    onClick={[Function]}
                  >
                    <Glyphicon
                      bsClass="glyphicon"
                      glyph="glyphicon glyphicon-ok"
                    />
                  </Button>
                </Col>
              </FormGroup>
            </Form>,
          ],
          "collapsible": false,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "messages": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "form",
              "children": Array [
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="id"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      autoFocus={true}
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      disabled={true}
                      type="text"
                      value=""
                    />
                  </Col>
                </FormGroup>,
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="username"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      autoFocus={true}
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      id="username"
                      name="username"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </Col>
                </FormGroup>,
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="email"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      onKeyPress={[Function]}
                      type="text"
                      value=""
                    />
                  </Col>
                </FormGroup>,
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="password"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      id="password"
                      name="password"
                      onChange={[Function]}
                      onKeyPress={[Function]}
                      type="password"
                      value=""
                    />
                  </Col>
                </FormGroup>,
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={5}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsSize="small"
                      bsStyle="default"
                      className="pull-right"
                      disabled={false}
                      id="saveUser"
                      onClick={[Function]}
                    >
                      <Glyphicon
                        bsClass="glyphicon"
                        glyph="glyphicon glyphicon-ok"
                      />
                    </Button>
                  </Col>
                </FormGroup>,
              ],
              "componentClass": "form",
              "horizontal": true,
              "inline": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="id"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        disabled={true}
                        type="text"
                        value=""
                      />
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="id"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>,
                      "componentClass": "div",
                      "sm": 1,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": Array [
                          <FormattedMessage
                            id="id"
                            values={Object {}}
                          />,
                          ":",
                        ],
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "id",
                            "values": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        ":",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        disabled={true}
                        type="text"
                        value=""
                      />,
                      "componentClass": "div",
                      "sm": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "bsClass": "form-control",
                        "bsSize": "small",
                        "componentClass": "input",
                        "disabled": true,
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="username"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="username"
                        name="username"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="username"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>,
                      "componentClass": "div",
                      "sm": 1,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": Array [
                          <FormattedMessage
                            id="username"
                            values={Object {}}
                          />,
                          ":",
                        ],
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "username",
                            "values": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        ":",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="username"
                        name="username"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />,
                      "componentClass": "div",
                      "sm": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "autoFocus": true,
                        "bsClass": "form-control",
                        "bsSize": "small",
                        "componentClass": "input",
                        "id": "username",
                        "name": "username",
                        "onChange": [Function],
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="email"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        type="text"
                        value=""
                      />
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="email"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>,
                      "componentClass": "div",
                      "sm": 1,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": Array [
                          <FormattedMessage
                            id="email"
                            values={Object {}}
                          />,
                          ":",
                        ],
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "email",
                            "values": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        ":",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControl
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        type="text"
                        value=""
                      />,
                      "componentClass": "div",
                      "sm": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-control",
                        "bsSize": "small",
                        "componentClass": "input",
                        "id": "email",
                        "name": "email",
                        "onChange": [Function],
                        "onKeyPress": [Function],
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="password"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="password"
                        name="password"
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        type="password"
                        value=""
                      />
                    </Col>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="password"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>,
                      "componentClass": "div",
                      "sm": 1,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": Array [
                          <FormattedMessage
                            id="password"
                            values={Object {}}
                          />,
                          ":",
                        ],
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "id": "password",
                            "values": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        ":",
                      ],
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControl
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="password"
                        name="password"
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        type="password"
                        value=""
                      />,
                      "componentClass": "div",
                      "sm": 4,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "form-control",
                        "bsSize": "small",
                        "componentClass": "input",
                        "id": "password",
                        "name": "password",
                        "onChange": [Function],
                        "onKeyPress": [Function],
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "form-group",
                  "children": <Col
                    bsClass="col"
                    componentClass="div"
                    sm={5}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsSize="small"
                      bsStyle="default"
                      className="pull-right"
                      disabled={false}
                      id="saveUser"
                      onClick={[Function]}
                    >
                      <Glyphicon
                        bsClass="glyphicon"
                        glyph="glyphicon glyphicon-ok"
                      />
                    </Button>
                  </Col>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsSize="small"
                      bsStyle="default"
                      className="pull-right"
                      disabled={false}
                      id="saveUser"
                      onClick={[Function]}
                    >
                      <Glyphicon
                        bsClass="glyphicon"
                        glyph="glyphicon glyphicon-ok"
                      />
                    </Button>,
                    "componentClass": "div",
                    "sm": 5,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "block": false,
                      "bsClass": "btn",
                      "bsSize": "small",
                      "bsStyle": "default",
                      "children": <Glyphicon
                        bsClass="glyphicon"
                        glyph="glyphicon glyphicon-ok"
                      />,
                      "className": "pull-right",
                      "disabled": false,
                      "id": "saveUser",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "glyphicon",
                        "glyph": "glyphicon glyphicon-ok",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <PanelHeading
            bsClass="panel"
            componentClass="div"
          >
            <FormattedMessage
              id="user"
              values={Object {}}
            />
          </PanelHeading>,
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <Messages />
            <Form
              bsClass="form"
              componentClass="form"
              horizontal={true}
              inline={false}
            >
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="id"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    autoFocus={true}
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    disabled={true}
                    type="text"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="username"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    autoFocus={true}
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    id="username"
                    name="username"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="email"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    id="email"
                    name="email"
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    type="text"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={1}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    <FormattedMessage
                      id="password"
                      values={Object {}}
                    />
                    :
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={4}
                >
                  <FormControl
                    bsClass="form-control"
                    bsSize="small"
                    componentClass="input"
                    id="password"
                    name="password"
                    onChange={[Function]}
                    onKeyPress={[Function]}
                    type="password"
                    value=""
                  />
                </Col>
              </FormGroup>
              <FormGroup
                bsClass="form-group"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  sm={5}
                >
                  <Button
                    active={false}
                    block={false}
                    bsClass="btn"
                    bsSize="small"
                    bsStyle="default"
                    className="pull-right"
                    disabled={false}
                    id="saveUser"
                    onClick={[Function]}
                  >
                    <Glyphicon
                      bsClass="glyphicon"
                      glyph="glyphicon glyphicon-ok"
                    />
                  </Button>
                </Col>
              </FormGroup>
            </Form>
          </PanelBody>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "panel",
            "children": <FormattedMessage
              id="user"
              values={Object {}}
            />,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "user",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "panel",
            "children": Array [
              <Messages />,
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={true}
                inline={false}
              >
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="id"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      autoFocus={true}
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      disabled={true}
                      type="text"
                      value=""
                    />
                  </Col>
                </FormGroup>
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="username"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      autoFocus={true}
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      id="username"
                      name="username"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </Col>
                </FormGroup>
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="email"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      id="email"
                      name="email"
                      onChange={[Function]}
                      onKeyPress={[Function]}
                      type="text"
                      value=""
                    />
                  </Col>
                </FormGroup>
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={1}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      <FormattedMessage
                        id="password"
                        values={Object {}}
                      />
                      :
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={4}
                  >
                    <FormControl
                      bsClass="form-control"
                      bsSize="small"
                      componentClass="input"
                      id="password"
                      name="password"
                      onChange={[Function]}
                      onKeyPress={[Function]}
                      type="password"
                      value=""
                    />
                  </Col>
                </FormGroup>
                <FormGroup
                  bsClass="form-group"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    sm={5}
                  >
                    <Button
                      active={false}
                      block={false}
                      bsClass="btn"
                      bsSize="small"
                      bsStyle="default"
                      className="pull-right"
                      disabled={false}
                      id="saveUser"
                      onClick={[Function]}
                    >
                      <Glyphicon
                        bsClass="glyphicon"
                        glyph="glyphicon glyphicon-ok"
                      />
                    </Button>
                  </Col>
                </FormGroup>
              </Form>,
            ],
            "collapsible": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "messages": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "form",
                "children": Array [
                  <FormGroup
                    bsClass="form-group"
                  >
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="id"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        disabled={true}
                        type="text"
                        value=""
                      />
                    </Col>
                  </FormGroup>,
                  <FormGroup
                    bsClass="form-group"
                  >
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="username"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        autoFocus={true}
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="username"
                        name="username"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </Col>
                  </FormGroup>,
                  <FormGroup
                    bsClass="form-group"
                  >
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="email"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="email"
                        name="email"
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        type="text"
                        value=""
                      />
                    </Col>
                  </FormGroup>,
                  <FormGroup
                    bsClass="form-group"
                  >
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={1}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        <FormattedMessage
                          id="password"
                          values={Object {}}
                        />
                        :
                      </ControlLabel>
                    </Col>
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={4}
                    >
                      <FormControl
                        bsClass="form-control"
                        bsSize="small"
                        componentClass="input"
                        id="password"
                        name="password"
                        onChange={[Function]}
                        onKeyPress={[Function]}
                        type="password"
                        value=""
                      />
                    </Col>
                  </FormGroup>,
                  <FormGroup
                    bsClass="form-group"
                  >
                    <Col
                      bsClass="col"
                      componentClass="div"
                      sm={5}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsSize="small"
                        bsStyle="default"
                        className="pull-right"
                        disabled={false}
                        id="saveUser"
                        onClick={[Function]}
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="glyphicon glyphicon-ok"
                        />
                      </Button>
                    </Col>
                  </FormGroup>,
                ],
                "componentClass": "form",
                "horizontal": true,
                "inline": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": Array [
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={1}
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="id"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>
                      </Col>,
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={4}
                      >
                        <FormControl
                          autoFocus={true}
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          disabled={true}
                          type="text"
                          value=""
                        />
                      </Col>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="id"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>,
                        "componentClass": "div",
                        "sm": 1,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "control-label",
                          "children": Array [
                            <FormattedMessage
                              id="id"
                              values={Object {}}
                            />,
                            ":",
                          ],
                          "srOnly": false,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "id": "id",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          ":",
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <FormControl
                          autoFocus={true}
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          disabled={true}
                          type="text"
                          value=""
                        />,
                        "componentClass": "div",
                        "sm": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autoFocus": true,
                          "bsClass": "form-control",
                          "bsSize": "small",
                          "componentClass": "input",
                          "disabled": true,
                          "type": "text",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": Array [
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={1}
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="username"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>
                      </Col>,
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={4}
                      >
                        <FormControl
                          autoFocus={true}
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          id="username"
                          name="username"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </Col>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="username"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>,
                        "componentClass": "div",
                        "sm": 1,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "control-label",
                          "children": Array [
                            <FormattedMessage
                              id="username"
                              values={Object {}}
                            />,
                            ":",
                          ],
                          "srOnly": false,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "id": "username",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          ":",
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <FormControl
                          autoFocus={true}
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          id="username"
                          name="username"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />,
                        "componentClass": "div",
                        "sm": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "autoFocus": true,
                          "bsClass": "form-control",
                          "bsSize": "small",
                          "componentClass": "input",
                          "id": "username",
                          "name": "username",
                          "onChange": [Function],
                          "type": "text",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": Array [
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={1}
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="email"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>
                      </Col>,
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={4}
                      >
                        <FormControl
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          onKeyPress={[Function]}
                          type="text"
                          value=""
                        />
                      </Col>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="email"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>,
                        "componentClass": "div",
                        "sm": 1,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "control-label",
                          "children": Array [
                            <FormattedMessage
                              id="email"
                              values={Object {}}
                            />,
                            ":",
                          ],
                          "srOnly": false,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "id": "email",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          ":",
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <FormControl
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          id="email"
                          name="email"
                          onChange={[Function]}
                          onKeyPress={[Function]}
                          type="text"
                          value=""
                        />,
                        "componentClass": "div",
                        "sm": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "bsSize": "small",
                          "componentClass": "input",
                          "id": "email",
                          "name": "email",
                          "onChange": [Function],
                          "onKeyPress": [Function],
                          "type": "text",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": Array [
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={1}
                      >
                        <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="password"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>
                      </Col>,
                      <Col
                        bsClass="col"
                        componentClass="div"
                        sm={4}
                      >
                        <FormControl
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          id="password"
                          name="password"
                          onChange={[Function]}
                          onKeyPress={[Function]}
                          type="password"
                          value=""
                        />
                      </Col>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <ControlLabel
                          bsClass="control-label"
                          srOnly={false}
                        >
                          <FormattedMessage
                            id="password"
                            values={Object {}}
                          />
                          :
                        </ControlLabel>,
                        "componentClass": "div",
                        "sm": 1,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "control-label",
                          "children": Array [
                            <FormattedMessage
                              id="password"
                              values={Object {}}
                            />,
                            ":",
                          ],
                          "srOnly": false,
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "id": "password",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          ":",
                        ],
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "col",
                        "children": <FormControl
                          bsClass="form-control"
                          bsSize="small"
                          componentClass="input"
                          id="password"
                          name="password"
                          onChange={[Function]}
                          onKeyPress={[Function]}
                          type="password"
                          value=""
                        />,
                        "componentClass": "div",
                        "sm": 4,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "form-control",
                          "bsSize": "small",
                          "componentClass": "input",
                          "id": "password",
                          "name": "password",
                          "onChange": [Function],
                          "onKeyPress": [Function],
                          "type": "password",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "form-group",
                    "children": <Col
                      bsClass="col"
                      componentClass="div"
                      sm={5}
                    >
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsSize="small"
                        bsStyle="default"
                        className="pull-right"
                        disabled={false}
                        id="saveUser"
                        onClick={[Function]}
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="glyphicon glyphicon-ok"
                        />
                      </Button>
                    </Col>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsSize="small"
                        bsStyle="default"
                        className="pull-right"
                        disabled={false}
                        id="saveUser"
                        onClick={[Function]}
                      >
                        <Glyphicon
                          bsClass="glyphicon"
                          glyph="glyphicon glyphicon-ok"
                        />
                      </Button>,
                      "componentClass": "div",
                      "sm": 5,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "block": false,
                        "bsClass": "btn",
                        "bsSize": "small",
                        "bsStyle": "default",
                        "children": <Glyphicon
                          bsClass="glyphicon"
                          glyph="glyphicon glyphicon-ok"
                        />,
                        "className": "pull-right",
                        "disabled": false,
                        "id": "saveUser",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "bsClass": "glyphicon",
                          "glyph": "glyphicon glyphicon-ok",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
